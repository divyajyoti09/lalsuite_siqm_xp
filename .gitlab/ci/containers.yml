# ----------------------------------------------------------------------
# LALSuite: container build
#
# Build and deploy the LALSuite containers
# ----------------------------------------------------------------------

#
# Build container images that include the latest build outputs
#

# job template for docker builds
.docker:
  image: docker:latest
  variables:
    DOCKER_DRIVER: overlay
  stage: docker
  script:
    # build container and push to registry
    - IMAGE_TAG=${CI_JOB_NAME##*:}
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
    - docker build --pull -t ${IMAGE_NAME}:${IMAGE_TAG} --file ${DOCKER_FILE} .
    - docker push ${IMAGE_NAME}:${IMAGE_TAG}

.docker:nightly:
  extends:
    - .docker
  variables:
    IMAGE_NAME: "$CI_REGISTRY_IMAGE/nightly"
  rules:
    - !reference [.ci-nightly-deploy, rules]

.docker:tags:
  extends:
    - .docker
  variables:
    IMAGE_NAME: "$CI_REGISTRY_IMAGE/$CI_COMMIT_TAG"
  rules:
    - !reference [.ci-lalsuite-tag-build, rules]

# template for RHEL docker builds
.docker:el:
  extends:
    - .docker
  variables:
    DOCKER_FILE: ".gitlab-ci-el7.Dockerfile"
  before_script:
    - set -x
    # add RPMs to directory to pass to docker
    - mkdir rpms && mv rpmbuild/RPMS/*/*.rpm rpms
    - rm -rf rpmbuild*
  needs:
    - lal:rpm
    - lalframe:rpm
    - lalmetaio:rpm
    - lalsimulation:rpm
    - lalburst:rpm
    - lalinspiral:rpm
    - lalinference:rpm
    - lalpulsar:rpm
    - lalapps:rpm

# template for Debian docker builds
.docker:debian:
  extends:
    - .docker
  variables:
    DOCKER_FILE: ".gitlab-ci-bullseye.Dockerfile"
  before_script:
    - set -x
    # add deb packages to directory to pass to docker
    - mkdir debs && mv *.deb debs
    - rm *.changes *.dsc *.orig.*
  needs:
    - lal:deb
    - lalframe:deb
    - lalmetaio:deb
    - lalsimulation:deb
    - lalburst:deb
    - lalinspiral:deb
    - lalinference:deb
    - lalpulsar:deb
    - lalapps:deb

# template for Koji docker builds
.docker:koji:
  extends:
    - .docker
  variables:
    DOCKER_FILE: ".gitlab-ci-koji.Dockerfile"
  needs:
    - lal:koji
    - lalframe:koji
    - lalmetaio:koji
    - lalsimulation:koji
    - lalburst:koji
    - lalinspiral:koji
    - lalpulsar:koji
    - lalinference:koji
    - lalapps:koji
  rules:
    - !reference [.ci-koji, rules]
    - !reference [.ci-nightly-deploy, rules]

# build a nightly container from the RPMs
docker:nightly:el7:
  extends:
    - .docker:el
    - .docker:nightly
  rules:
    - !reference [.ci-docker, rules]

# build a tagged container from the rpms
docker:tags:el7:
  extends:
    - .docker:el
    - .docker:tags

# build a nightly container for Debian bullseye
docker:nightly:bullseye:
  extends:
    - .docker:debian
    - .docker:nightly
  rules:
    - !reference [.ci-docker, rules]

# build a tagged container for Debian bullseye
docker:tags:bullseye:
  extends:
    - .docker:debian
    - .docker:tags

# build a nightly containers from the koji rpms
docker:nightly:el7-koji:
  extends:
    - .docker:koji
    - .docker:nightly
