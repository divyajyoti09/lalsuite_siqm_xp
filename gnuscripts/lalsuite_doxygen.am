TEST_EXTENSIONS = .sh
SH_LOG_COMPILER = $(SHELL)

.PHONY: doxygen-input-sources

if DOXYGEN

if HAVE_GIT_REPO
doxygen_include_gitid = true
endif # HAVE_GIT_REPO

doxygen_quiet   = $(doxygen_quiet_$(V))
doxygen_quiet_  = $(doxygen_quiet_$(AM_DEFAULT_VERBOSITY))
doxygen_quiet_0 = YES
doxygen_quiet_1 = NO

doxygen_redir   = $(doxygen_redir_$(V))
doxygen_redir_  = $(doxygen_redir_$(AM_DEFAULT_VERBOSITY))
doxygen_redir_0 = >/dev/null
doxygen_redir_1 =

doxygen_header.html: Makefile $(DOXYGEN)
	$(AM_V_GEN)set -e; \
	rm -f $@.tmp; \
	$(DOXYGEN) -w html $@.tmp /dev/null /dev/null >/dev/null 2>&1; \
	if test "x$(DOXYGEN_NAVIGATION_TABS)" != x; then \
		if test "x$(PACKAGE)" = xlalsuite; then \
			pkg_reldir="../.."; \
		else \
			pkg_reldir="../../.."; \
		fi; \
		echo "<div id=\"lalsuite_navigation_tabs\"><ul class=\"sm sm-dox\">" >> $@.tmp; \
		if test "x$(PACKAGE)" = xlalsuite; then \
			echo "<li class=\"sm sm-dox\"><a href=\"index.html\"><span>LALSuite</span></a></li>" >> $@.tmp; \
		else \
			echo "<li class=\"sm sm-dox\"><a href=\"../../../doxygen/out/index.html\"><span>LALSuite</span></a></li>" >> $@.tmp; \
		fi; \
		for pkg in $(DOXYGEN_NAVIGATION_TABS); do \
			pkg_lcase=`echo $${pkg} | tr '[A-Z]' '[a-z]'`; \
			if test "x$${pkg_lcase}" = "x$(PACKAGE_NAME_LCASE)"; then \
				echo "<li class=\"sm sm-dox\"><a href=\"index.html\"><span>$${pkg}</span></a></li>" >> $@.tmp; \
			else \
				echo "<li class=\"sm sm-dox\"><a href=\"$${pkg_reldir}/$${pkg_lcase}/doxygen/out/index.html\"><span>$${pkg}</span></a></li>" >> $@.tmp; \
			fi; \
		done; \
		echo "</ul></div>" >> $@.tmp; \
	fi; \
	mv -f $@.tmp $@

doxygen-input-sources: Makefile
	$(AM_V_GEN)set -e; \
	rm -rf in/; \
	if test "x$(PACKAGE)" = xlalsuite; then \
		$(MKDIR_P) in/; \
		cp $(top_srcdir)/README.md $(top_srcdir)/COPYING $(top_srcdir)/CONTRIBUTING.md in/; \
		if test -f $(top_srcdir)/AUTHORS; then \
			cp $(top_srcdir)/AUTHORS in/; \
		else \
			( cd $(top_builddir) && $(MAKE) V=$(V) AUTHORS ); \
			cp  $(top_builddir)/AUTHORS in/; \
		fi; \
	else \
		( cd $(top_builddir) && $(MAKE) V=$(V) distdir $(doxygen_redir) ); \
		mv "$(top_builddir)/$(PACKAGE)-$(VERSION)/" in/; \
		rm -rf in/doxygen/; \
	fi

autogen.dox: Makefile doxygen-input-sources make_autogen_dox
	$(AM_V_GEN)set -e; \
	./make_autogen_dox > $@.tmp; \
	mv -f $@.tmp $@

html-local: Makefile doxygen_header.html doxygen-input-sources autogen.dox $(CONFIG_CLEAN_FILES)
	$(AM_V_GEN)set -e; \
	export doxygen_version="$(VERSION)"; \
	if test "x$(doxygen_include_gitid)" = xtrue; then \
		gitid=`cd $(abs_top_srcdir) && $(GIT) log -1 --pretty='format:%h'`; \
		if test "x$${gitid}" != x; then \
			unclean=`cd $(abs_top_srcdir) && ( $(GIT) diff --quiet HEAD || printf %s -UNCLEAN )`; \
			doxygen_version="$${doxygen_version}-$${gitid}$${unclean}"; \
		fi; \
	fi; \
	for tagfile in $(DOXYGEN_TAGFILES); do \
		tagfile=`echo "$${tagfile}" | $(SED) 's/=.*$$//'`; \
		if ! test -r "$${tagfile}"; then \
			echo "$(subdir)/Makefile: ERROR: missing tag file $${tagfile}" >&2; \
			echo "$(subdir)/Makefile: (hint: you may need to rebuild the Doxygen documentation for the corresponding library)" >&2; \
			exit 1; \
		fi; \
	done; \
	export doxygen_tagfiles; doxygen_tagfiles="$(DOXYGEN_TAGFILES)"; \
	export doxygen_quiet; doxygen_quiet="$(doxygen_quiet)"; \
	export doxygen_exclude; doxygen_exclude=`cat $(abs_srcdir)/exclude.list | tr '\n' ' '`; \
	$(MKDIR_P) out/; \
	$(DOXYGEN) doxygen.cfg $(doxygen_redir) 2>&1; \
	$(PYTHON) $(abs_srcdir)/check_tags.py $(abs_builddir)/out/$(PACKAGE).tag >> warnings.log; \
	for file in `find $(abs_builddir)/out/ -type f`; do \
		$(SED) 's/autotoc/$(PACKAGE)_autotoc/g' $${file} > sed-output.tmp 2>> warnings.log; \
		mv -f sed-output.tmp $${file} 2>> warnings.log; \
	done; \
	rm -rf in/; \
	$(SED) -e 's|^$(abs_top_builddir)/doxygen/in|$(abs_top_srcdir)|g' warnings.log > warnings-tmp.log; \
	mv -f warnings-tmp.log warnings.log; \
	$(SED) $(DOXYGEN_WARNING_REGEX) warnings.log > errors.log; \
	cat errors.log >&2; \
	test `cat errors.log | wc -l` -eq 0; \
	echo "$(subdir)/Makefile: Doxygen documentation was built successfully!"; \
	echo "$(subdir)/Makefile: $(PACKAGE_NAME) main page is at file://$(abs_builddir)/out/index.html"

TESTS = test_doxygen.sh
test_doxygen.sh:
	$(AM_V_at)echo "cd $(abs_builddir) && make html" >$@

install-html-local: html-local
	$(AM_V_at)set -e; \
	for dir in `cd out/ && find . -type d`; do \
		echo " $(MKDIR_P) '$(DESTDIR)$(htmldir)/$${dir}'"; \
		$(MKDIR_P) "$(DESTDIR)$(htmldir)/$${dir}"; \
		$(PYTHON) $(abs_srcdir)/install_regex.py "$(DESTDIR)$(htmldir)/$${dir}" "$(DOXYGEN_INSTALL_DIRMAP)" > $@.regex; \
		for file in `cd out/ && echo $${dir}/*`; do \
			if test -f "out/$${file}"; then \
				echo " $(INSTALL_DATA) out/$${file} '$(DESTDIR)$(htmldir)/$${file}'"; \
				LC_ALL=C $(SED) -n -f $@.regex "out/$${file}" > $@.tmp; \
				$(INSTALL_DATA) $@.tmp "$(DESTDIR)$(htmldir)/$${file}"; \
			fi; \
		done; \
	done; \
	rm -f $@.regex $@.tmp; \
	echo "$(subdir)/Makefile: Doxygen documentation was installed successfully!"; \
	echo "$(subdir)/Makefile: installed $(PACKAGE_NAME) main page is at file://$(DESTDIR)$(htmldir)/index.html"

uninstall-local:
	-rm -rf "$(DESTDIR)$(htmldir)/"

clean-local:
	-rm -rf in/ out/
	-rm -f autogen.dox doxygen_header.html doxygen_objdb_*.tmp doxygen_sqlite3.db sed-output.tmp errors.log warnings.log warnings-tmp.log test_doxygen.sh

EXTRA_DIST = \
	check_tags.py \
	exclude.list \
	filter_py.py \
	filter_swig.sed \
	gitlab-CODEOWNERS \
	install_regex.py \
	layout.xml \
	mathjax.js \
	src \
	stylesheet.css \
	$(END_OF_LIST)

endif # DOXYGEN
